{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","item","index","key","name","job","className","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submitForm","handleSubmit","state","setState","handleChange","event","_event$target","target","value","defineProperty","_this$state","type","onChange","App","characters","character","concat","toConsumableArray","filter","i","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5a8aa10.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst TableHeader = () => { \n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n  }\n\nconst TableBody = props => { \n    const rows = props.characterData.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.name}</td>\n          <td>{item.job}</td>\n          <td><button className=\"btn btn-success\" onClick={() => props.removeCharacter(index)}>Delete</button></td>\n        </tr>\n      )\n    });\n  \n    return <tbody>{rows}</tbody>\n  }\n\nclass Table extends Component {\n    render() {\n        const {characterData, removeCharacter} = this.props;\n\n        return (\n            <table className=\"table\">\n               <TableHeader />\n               <TableBody \n                characterData={characterData}\n                removeCharacter={removeCharacter}\n                />\n            </table>\n        );\n    }\n}\n\nexport default Table;","import React, {Component} from \"react\";\n\nclass Form extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      name : '',\n      job : ''\n    }\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.state);\n  }\n\n  handleChange = event => {\n    const {name, value} = event.target;\n\n    this.setState({\n      [name] : value\n    })\n  }\n\n  render() {\n    const { name, job } = this.state; \n\n    return (\n      <form className=\"form\">\n        <div className=\"form-group\">\n          <label>Name</label>\n          <input\n              className=\"form-control\"\n              type=\"text\" \n              name=\"name\" \n              value={name} \n              onChange={this.handleChange} />\n          <label>Job</label>\n        </div>\n        <div className=\"form-group\">\n          <input\n              className=\"form-control\"\n              type=\"text\" \n              name=\"job\" \n              value={job} \n              onChange={this.handleChange}/>\n        </div>\n        <input\n            className=\"btn btn-primary\"\n            type=\"button\" \n            value=\"Submit\" \n            onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;","import React, {Component} from 'react';\nimport Table from './Table';\nimport Form from \"./Form\";\n\nclass App extends Component {\n\tstate = {\n\t\tcharacters : []\n\t}\n\n  render() {\n\t\t/* Com adereços tem-se um cilco de dados unidirecional, não podendo excluir itens da matriz\n\t\tconst characters = [\n\t\t\t{\n\t\t\t\t\t'name': 'Charlie',\n\t\t\t\t\t'job': 'Janitor'\n\t\t\t},\n\t\t\t{\n\t\t\t\t\t'name': 'Mac',\n\t\t\t\t\t'job': 'Bouncer'\n\t\t\t},\n\t\t\t{\n\t\t\t\t\t'name': 'Dee',\n\t\t\t\t\t'job': 'Aspring actress'\n\t\t\t},\n\t\t\t{\n\t\t\t\t\t'name': 'Dennis',\n\t\t\t\t\t'job': 'Bartender'\n\t\t\t}\n\t\t];\n\t\t*/\n\t\tconst {characters} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Tutorial React</h1>\n\t\t\t\t<Table \n\t\t\t\t\tcharacterData={characters}\n\t\t\t\t\tremoveCharacter={this.removeCharacter}\n\t\t\t\t\t/>\n\t\t\t\t<Form handleSubmit={this.handleSubmit}></Form>\n\t\t\t</div>\n\t\t);\n\t}\n\n\thandleSubmit = character => {\n    this.setState({\n      characters : [\n        ...this.state.characters,\n        character\n      ]\n    })\n  }\n\t\n\tremoveCharacter = index => {\n\t\tconst {characters} = this.state;\n\n\t\t// O filter percorre todo o array de caracteres e só retorna aqueles que são diferentes do índice\n\t\tthis.setState({\n\t\t\tcharacters: characters.filter((character, i) => {\n\t\t\t\treturn i !== index;\n\t\t\t})\n\t\t})\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}